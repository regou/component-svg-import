{"version":3,"file":null,"sources":["../src/index.js"],"sourcesContent":["import 'skatejs-web-components';\n\nimport {Component, prop, h} from 'skatejs';\nconst React = { createElement: h };\n\n\n\ncustomElements.define('svg-import', class extends Component {\n\tstatic get props () {\n\t\treturn {\n\t\t\t// By declaring the property an attribute, we can now pass an initial value\n\t\t\t// for the count as part of the HTML.\n\t\t\tsrc: prop.string({ attribute: true }),\n\t\t\t'inner-style': prop.string({ attribute: true }),\n\t\t};\n\t}\n\tupdateXml(){\n\t\tif(!jQuery){\n\t\t\tthrow new TypeError('svg-import require jQuery to work!');\n\t\t}\n\t\tlet comp = this;\n\n\n\t\tconst $ = jQuery;\n\n\n\t\t$.get({url:this.src,cache:true,async:true})\n\t\t\t.then(function (xml) {\n\n\t\t\t\tvar $svg = $(xml).find('svg');\n\t\t\t\tvar svg = $svg.get(0);\n\t\t\t\tsvg.removeAttribute('xmlns:a');\n\t\t\t\tif(comp.width && comp.height){\n\t\t\t\t\t// svg.hasAttribute('viewBox') ? svg.setAttribute('viewBox', '0 0 ' + comp.height + ' ' + comp.width) : '';\n\t\t\t\t\tsvg.setAttribute('width','100%');\n\t\t\t\t\tsvg.setAttribute('height','100%');\n\t\t\t\t}\n\n\t\t\t\t// comp.xmlData = $svg.clone().wrap('<div/>').parent().html();\n\t\t\t\tvar wraper = $(comp.shadowRoot).find('.svg-import-wrap').get(0);\n\n\t\t\t\twraper.innerHTML = '';\n\t\t\t\twraper.appendChild(svg);\n\n\t\t\t})\n\t}\n\tconnectedCallback () {\n\t\t// Ensure we call the parent.\n\t\tsuper.connectedCallback();\n\t\t//this.updateXml();\n\n\t}\n\tattributeChangedCallback (name, oldValue, newValue) {\n\t\tsuper.attributeChangedCallback(name, oldValue, newValue);\n\t\tif(name == 'src'){\n\t\t\tthis.updateXml();\n\t\t}\n\n\t}\n\tdisconnectedCallback () {\n\t\t// Ensure we callback the parent.\n\t\tsuper.disconnectedCallback();\n\n\t\t// If we didn't clean up after ourselves, we'd continue to render\n\t}\n\trenderCallback () {\n\t\t// By separating the strings (and not using template literals or string\n\t\t// concatenation) it ensures the strings are diffed indepenedently. If\n\t\t// you select \"Count\" with your mouse, it will not deselect whenr endered.\n\t\tvar comp = this;\n\n\t\tconst defBoxStyle = `\n\t\t\t:host{display:inline-block;}\n\t\t\t.svg-import-wrap{\n\t\t\t\toverflow:hidden;\n\t\t\t\tmargin:0;\n\t\t\t\tpadding:0;\n\t\t\t\twidth:100%;\n\t\t\t\theight:100%;\n\t\t\t\tmin-width:5px;\n\t\t\t\tmin-height:5px;\n\t\t\t\tdisplay:block;\n\t\t\t}\n\t\t\tsvg{\n\t\t\t\twidth:100%;\n\t\t\t\theight:100%;\n\t\t\t}\n\t\t`;\n\n\t\treturn ([\n\t\t\th('style', defBoxStyle + comp['inner-style']),\n\t\t\t<figure role=\"image\" className=\"svg-import-wrap\"></figure>\n\t\t])\n\t}\n});\n"],"names":["customElements","define","jQuery","TypeError","comp","this","$","get","url","src","cache","async","then","xml","$svg","find","svg","removeAttribute","width","height","setAttribute","wraper","shadowRoot","innerHTML","appendChild","name","oldValue","newValue","updateXml","defBoxStyle","h","role","className","prop","string","attribute","Component"],"mappings":"+4EAOAA,gBAAeC,OAAO,sLAUhBC,YACG,IAAIC,WAAU,yCAEjBC,GAAOC,KAGLC,EAAIJ,SAGRK,KAAKC,IAAIH,KAAKI,IAAIC,OAAM,EAAKC,OAAM,IACnCC,KAAK,SAAUC,MAEXC,GAAOR,EAAEO,GAAKE,KAAK,OACnBC,EAAMF,EAAKP,IAAI,KACfU,gBAAgB,WACjBb,EAAKc,OAASd,EAAKe,WAEjBC,aAAa,QAAQ,UACrBA,aAAa,SAAS,YAIvBC,GAASf,EAAEF,EAAKkB,YAAYP,KAAK,oBAAoBR,IAAI,KAEtDgB,UAAY,KACZC,YAAYR,mMAUIS,EAAMC,EAAUC,0GACVF,EAAMC,EAAUC,GACpC,OAARF,QACGG,2MAcFxB,GAAOC,KAELwB,6UAmBLC,IAAE,QAASD,EAAczB,EAAK,gBAC9B0B,cAAQC,KAAK,QAAQC,UAAU,gEA/E1BC,OAAKC,QAASC,WAAW,kBACfF,OAAKC,QAASC,WAAW,YANOC"}